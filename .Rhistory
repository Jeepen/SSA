pers <- function(n){
if(length(n) == 1){
print(paste("Number", n))
print(paste("Iterations", 1))
}
}
pers(5)
n <- 2357
as.character(n)
strsplit(as.character(n))
str.split(as.character(n))
strsplit(as.character(n), "")
strsplit(as.character(n), "")[[1]]
as.numeric(strsplit(as.character(n), "")[[1]])
prod(as.numeric(strsplit(as.character(n), "")[[1]]))
pers <- function(n){
i <- 1
if(length(n) == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
}
}
pers(5)
pers(55)
strsplit(55,"")
strsplit(as.character(55),"")
strsplit(as.character(55),"")[[1]]
length(strsplit(as.character(55),"")[[1]])
pers <- function(n){
i <- 1
l <- length(strsplit(as.charcter(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while()
}
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.charcter(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(5)
}
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.charcter(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
}
pers(5)
l <- length(strsplit(as.character(n), ""))
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(5)
}
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(5)
}
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.charcter(n),"")))
l <- length(strsplit(as.character(n), ""))
i <- i + 1
print(n)
}
}
}
pers(5)
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), ""))
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.charcter(n),"")))
l <- length(strsplit(as.character(n), ""))
i <- i + 1
print(n)
}
}
print(i)
}
pers(55)
n <- 55
i <- 1
l <- length(strsplit(as.character(n), ""))
l
strsplit(as.character(n), "")
length(strsplit(as.character(n), "")[[1]])
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.charcter(n),"")))
l <- length(strsplit(as.character(n), ""))
i <- i + 1
print(n)
}
}
print(i)
}
pers(55)
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
}
print(i)
}
pers(55)
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
}
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
n <- prod(as.numeric(strsplit(as.character(n),"")))
as.numeric(strsplit(as.character(n),""))
strsplit(as.character(n),"")
as.numeric(strsplit(as.character(n),"")[[1]])
prod(as.numeric(strsplit(as.character(n),"")[[1]]))
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")[[1]]))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
}
print(i)
}
pers(55)
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")[[1]]))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
}
data.frame(Iterations = i, Final number = n)
}
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
if(l == 1){
print(paste("Number:", n))
print(paste("Iterations:", i))
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")[[1]]))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
print(n)
}
}
data.frame(Iterations = i, Last = n)
}
pers(55)
x <- data.frame(fisk = c(2), ko = c(3))
x <- rbind(x, c(3,5))
c
x
pers <- function(n){
i <- 1
l <- length(strsplit(as.character(n), "")[[1]])
out <- data.frame(Iterations = i, Number = n)
if(l == 1){
n
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")[[1]]))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
out <- rbind(out, c(i, n))
}
}
out
}
pers(55)
pers <- function(n){
i <- 0
l <- length(strsplit(as.character(n), "")[[1]])
out <- data.frame(Iterations = i, Number = n)
if(l == 1){
n
}
else{
while(l > 1){
n <- prod(as.numeric(strsplit(as.character(n),"")[[1]]))
l <- length(strsplit(as.character(n), "")[[1]])
i <- i + 1
out <- rbind(out, c(i, n))
}
}
out
}
pers(55)
str(pers(55))
pers(99999)
test <- matrix(c(1:10, rep(NA,10)), ncol = 2)
test
for(i in 1:n0){
pers(test[i,1])
}
n0 <- 10
test <- matrix(c(1:n0, rep(NA,n0)), ncol = 2)
for(i in 1:n0){
pers(test[i,1])
}
test
pers(test[i,1])
for(i in 1:n0){
tmp <- pers(test[i,1])
test[i,2] <- tmp[nrow(tmp), 2]
}
test
for(i in 1:n0){
tmp <- pers(test[i,1])
test[i,2] <- tmp[nrow(tmp), 1]
}
test
n0 <- 100
test <- matrix(c(1:n0, rep(NA,n0)), ncol = 2)
for(i in 1:n0){
tmp <- pers(test[i,1])
test[i,2] <- tmp[nrow(tmp), 1]
}
max(test[,2])
test
test[test[,2] == max(test[,2]),]
pers(77)
n0 <- 1000
test <- matrix(c(1:n0, rep(NA,n0)), ncol = 2)
for(i in 1:n0){
tmp <- pers(test[i,1])
test[i,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
test <- matrix(c(lwr:n0, rep(NA,n-lwr)), ncol = 2)
lwr <- 976
n0 <- 1000
test <- matrix(c(lwr:n0, rep(NA,n-lwr)), ncol = 2)
test <- matrix(c(lwr:n0, rep(NA,n-lwr+1)), ncol = 2)
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
tail(test)
head(test)
lwr <- 976
n0 <- 1000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
for(i in lwr:n0){
tmp <- pers(test[i,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
lwr <- 976
n0 <- 10000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
lwr <- 8876
n0 <- 20000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
lwr <- 18876
n0 <- 30000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
lwr <- 28873
n0 <- 100000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
i
test[test[,2] == max(test[,2]),]
tail(test)
sum(is.na(test))
sum(is.nan(test))
test[test[,2] == max(test[,2]),]
lwr <- 98886
n0 <- 1000000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
test[test[,2] == max(test[,2]),]
tail(test[test[,2] == max(test[,2]),])
pers(lwr)
lwr <- 997762
n0 <- 10000000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
tail(test[test[,2] == max(test[,2]),])
lwr <- 9999996 #8
n0 <- 11000000
test <- matrix(c(lwr:n0, rep(NA,n0-lwr+1)), ncol = 2)
for(i in lwr:n0){
tmp <- pers(test[i-lwr+1,1])
test[i-lwr+1,2] <- tmp[nrow(tmp), 1]
}
tail(test[test[,2] == max(test[,2]),])
.2+.1
options(digits = 30)
options(digits = 22)
.2+.1
.2+.1
updateR()
library(installr)
install.packages("installr")
install.packages("installR")
install.packages("rinstall")
install.packages("Rinstall")
install.packages("installr")
updateR()
installr::updateR()
q()
n
q()
q()
n
library(biSurv)
setwd("~/Dropbox/RPackage/biSurv")
library(devtools)
install.packages("devtools")
install.packages("systemfonts")
install.packages("systemfonts")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
library(biSurv)
q()
n
2+2
q()
n
q()
n
library(stringr)
q()
rm(list=ls())
library(rstudioapi)
setwd(dirname(getSourceEditorContext()$path))
source("function.R")
source("demography.R")
set.seed(25012023)
# Parameters --------------------------------------------------------------
deltas <- c(Inf, 10, 1.5)
lambda1 <- c(.01, .02)
frailtyVar <- c(0,1)
HR <- c(1,2)                                                                    # Between X and Y
HR2 <- c(0, 1, 5)                                                               # Between X and Z, note that 0 is a hack - it results in Z=Inf
totalscenarios <- length(deltas) * length(lambda1) * length(frailtyVar) * length(HR) * length(HR2)
# All simulations ---------------------------------------------------------
results <- list()
i <- 1
starttime <- Sys.time()
for(hr in HR){
for(hr2 in HR2){
for(lambda in lambda1){
for(vars in frailtyVar){
for(delta in deltas){
cat(i, "\n")
results[[i]] <- list(name = data.frame(delta = delta, HR2 = hr2, lambda = lambda, var = vars, HR = hr),
ests = simfunction(n = 1e2, nsim = 1000, l1 = lambda, HR = hr, frailtyVar = vars, delta = delta, HR2 = hr2))
cat("Expected time left:", (totalscenarios-i) * difftime(Sys.time(), starttime, units = "mins") / i, "\n")
cat("Total time so far:", difftime(Sys.time(), starttime, units = "mins"), "\n")
cat("Expected total time:", difftime(Sys.time(), starttime, units = "mins") +
(totalscenarios-i) * difftime(Sys.time(), starttime, units = "mins") / i, "\n")
cat("Results", apply(results[[i]]$ests, 2, mean), "\n")
i <- i + 1
}
}
}
}
}
endtime <- Sys.time()
difftime(endtime, starttime)
saveRDS(results, "allresults3.rds")
# Save results ------------------------------------------------------------
smallresults <- meanresults <- data.frame()
for(i in 1:length(results)){
smallresults <- rbind(smallresults, results[[i]]$name)
meanresults <- rbind(meanresults, apply(results[[i]]$ests, 2, mean))
}
res <- cbind(smallresults, meanresults)
names(res)[6:9] <- c("rc", "rn", "ra", "nsub")
head(res)
names(res)[6:10] <- c("rc", "rn", "ra", "nsub", "totalsubs")
head(res)
saveRDS(res, "meanresults3.rds")
d <- readRDS("meanresults3.rds")
subset(d, var == 0 & HR2 == 5 & HR == 1)
subset(d, HR == 2 & delta == 1)
subset(d, HR == 2 & delta == 1.5)
subset(d, HR == 1 & lambda == .02 & var == 0 & delta == Inf)
subset(d, HR2 == 1 & HR == 1 & lambda == .02 & var == 0)
subset(d, lambda == 0.02)
